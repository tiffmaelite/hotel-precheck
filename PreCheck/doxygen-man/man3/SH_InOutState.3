.TH "SH_InOutState" 3 "Lundi Juin 24 2013" "Version 0.4" "PreCheck" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SH_InOutState \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SH_IOState\&.h>\fP
.PP
Est dérivée de \fBSH_GenericState\fP\&.
.PP
Dérivée par \fBSH_FileSelectionState\fP, \fBSH_QuestionState\fP, et \fBSH_StatementState\fP\&.
.SS "Connecteurs publics"

.in +1c
.ti -1c
.RI "virtual void \fBsetInput\fP (const QVariant &\fBinput\fP)"
.br
.ti -1c
.RI "virtual void \fBsetOutput\fP (const QString &\fBoutput\fP)"
.br
.ti -1c
.RI "virtual void \fBsetVisibility\fP (bool isVisible)"
.br
.in -1c
.SS "Signaux"

.in +1c
.ti -1c
.RI "void \fBgoNext\fP ()"
.br
.ti -1c
.RI "void \fBnext\fP ()"
.br
.ti -1c
.RI "void \fBresendInput\fP (QVariant \fBinput\fP)"
.br
.ti -1c
.RI "void \fBsendOutput\fP (QVariant \fBoutput\fP)"
.br
.in -1c
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBSH_InOutState\fP (QString \fBoutput\fP, QString \fBname\fP, \fBQState\fP *parent=0)"
.br
.ti -1c
.RI "void \fBdisplay\fP (bool canDisplay)"
.br
.ti -1c
.RI "virtual QVariant \fBinput\fP () const "
.br
.ti -1c
.RI "bool \fBisRunning\fP ()"
.br
.ti -1c
.RI "void \fBonExit\fP (QEvent *event)"
.br
.ti -1c
.RI "virtual QString \fBoutput\fP () const "
.br
.ti -1c
.RI "virtual QVariant \fBrawInput\fP () const "
.br
.ti -1c
.RI "QString \fBtoString\fP ()"
.br
.ti -1c
.RI "bool \fBvisibility\fP ()"
.br
.in -1c
.SS "Fonctions membres protégées"

.in +1c
.ti -1c
.RI "void \fBonEntry\fP (QEvent *event)"
.br
.in -1c
.SS "Attributs privés"

.in +1c
.ti -1c
.RI "bool \fBm_display\fP"
.br
.RI "\fIm_display \fP"
.ti -1c
.RI "QVariant \fBm_input\fP"
.br
.RI "\fIm_input \fP"
.ti -1c
.RI "bool \fBm_isVisible\fP"
.br
.RI "\fIm_isVisible \fP"
.ti -1c
.RI "QString \fBm_output\fP"
.br
.RI "\fIm_output \fP"
.in -1c
.SH "Description détaillée"
.PP 
Définition à la ligne 11 du fichier SH_IOState\&.h\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "SH_InOutState::SH_InOutState (QStringoutput, QStringname, \fBQState\fP *parent = \fC0\fP)"

.PP
Définition à la ligne 9 du fichier SH_IOState\&.cpp\&.
.PP
.nf
9                                                                          :
10     SH_GenericState(name, parent), m_output(output), m_isVisible(true)
11 {
12 }
.fi
.SH "Documentation des fonctions membres"
.PP 
.SS "SH_InOutState::display (boolcanDisplay)"

.PP
\fBParamètres:\fP
.RS 4
\fIcanDisplay\fP 
.RE
.PP

.PP
Définition à la ligne 101 du fichier SH_IOState\&.cpp\&.
.PP
Références SH_GenericState::isRunning(), m_display, m_isVisible, m_output, et sendOutput()\&.
.PP
Référencé par SH_InOutStateMachine::addIOState(), et SH_StatementState::onEntry()\&.
.PP
.nf
102 {
103     if(isRunning()) {
104         m_display=canDisplay;
105         if(m_display && !m_output\&.isEmpty() && m_isVisible) {
106             qDebug() << "resalut !" << QVariant(m_output);
107             emit sendOutput(QVariant(m_output));
108         }
109     }
110 }
.fi
.SS "SH_GenericState::goNext ()\fC [signal]\fP, \fC [inherited]\fP"

.PP
Référencé par SH_QuestionState::checkValidity(), SH_ConfirmationState::confirmInput(), SH_AdaptDatabaseState::insertUpdate(), SH_StatementState::onEntry(), SH_BillingCreationStateMachine::SH_BillingCreationStateMachine(), SH_GenericState::SH_GenericState(), et SH_ServiceCharging::SH_ServiceCharging()\&.
.SS "SH_InOutState::input () const\fC [virtual]\fP"

.PP
\fBRenvoie:\fP
.RS 4
QVariant 
.RE
.PP

.PP
Définition à la ligne 20 du fichier SH_IOState\&.cpp\&.
.PP
Références m_input\&.
.PP
Référencé par rawInput(), SH_DateQuestionState::rawInput(), et setInput()\&.
.PP
.nf
21 {
22     return m_input;
23 }
.fi
.SS "SH_GenericState::isRunning ()\fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 92 du fichier SH_GenericDebugableState\&.cpp\&.
.PP
Références SH_GenericState::m_isRunning\&.
.PP
Référencé par SH_InOutStateMachine::addChildrenReplaceTransition(), display(), SH_GenericState::emitGoNext(), setInput(), setOutput(), et setVisibility()\&.
.PP
.nf
93 {
94     return m_isRunning;
95 }
.fi
.SS "SH_GenericState::next ()\fC [signal]\fP, \fC [inherited]\fP"

.PP
Référencé par SH_GenericState::emitGoNext()\&.
.SS "SH_GenericState::onEntry (QEvent *event)\fC [protected]\fP, \fC [inherited]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIevent\fP 
.RE
.PP

.PP
Définition à la ligne 71 du fichier SH_GenericDebugableState\&.cpp\&.
.PP
Références SH_GenericState::m_isRunning, et SH_NamedObject::name()\&.
.PP
Référencé par SH_StatementState::onEntry()\&.
.PP
.nf
72 {
73     Q_UNUSED(event);
74     m_isRunning = true;
75     this->blockSignals(!m_isRunning);
76     qDebug() << "Machine: " << machine()->objectName() << " entered " << name();
77 }
.fi
.SS "SH_InOutState::onExit (QEvent *event)"

.PP
\fBParamètres:\fP
.RS 4
\fIevent\fP 
.RE
.PP

.PP
Définition à la ligne 118 du fichier SH_IOState\&.cpp\&.
.PP
Références m_input, m_isVisible, SH_GenericState::onExit(), et resendInput()\&.
.PP
.nf
119 {
120     if(m_isVisible) {
121         emit resendInput(m_input);
122     }
123     SH_GenericState::onExit(event);
124 }
.fi
.SS "SH_InOutState::output () const\fC [virtual]\fP"

.PP
\fBRenvoie:\fP
.RS 4
QString 
.RE
.PP

.PP
Définition à la ligne 58 du fichier SH_IOState\&.cpp\&.
.PP
Références m_output\&.
.PP
Référencé par SH_InOutStateMachine::addIOState(), setOutput(), et SH_StatementState::SH_StatementState()\&.
.PP
.nf
59 {
60     return m_output;
61 }
.fi
.SS "SH_InOutState::rawInput () const\fC [virtual]\fP"

.PP
\fBRenvoie:\fP
.RS 4
QVariant 
.RE
.PP

.PP
Réimplémentée dans \fBSH_DateQuestionState\fP, et \fBSH_DatabaseContentQuestionState\fP\&.
.PP
Définition à la ligne 30 du fichier SH_IOState\&.cpp\&.
.PP
Références input()\&.
.PP
Référencé par SH_InOutStateMachine::addIOState()\&.
.PP
.nf
31 {
32     return input();
33 }
.fi
.SS "SH_InOutState::resendInput (QVariantinput)\fC [signal]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIinput\fP 
.RE
.PP

.PP
Référencé par SH_InOutStateMachine::addIOState(), onExit(), et setInput()\&.
.SS "SH_InOutState::sendOutput (QVariantoutput)\fC [signal]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIoutput\fP 
.RE
.PP

.PP
Référencé par SH_InOutStateMachine::addIOState(), display(), et setOutput()\&.
.SS "SH_InOutState::setInput (const QVariant &input)\fC [virtual]\fP, \fC [slot]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIinput\fP 
.RE
.PP

.PP
Réimplémentée dans \fBSH_QuestionState\fP, et \fBSH_StatementState\fP\&.
.PP
Définition à la ligne 41 du fichier SH_IOState\&.cpp\&.
.PP
Références input(), SH_GenericState::isRunning(), m_input, m_isVisible, et resendInput()\&.
.PP
Référencé par SH_InOutStateMachine::addIOState(), SH_QuestionState::checkValidity(), et SH_ServiceCharging::SH_ServiceCharging()\&.
.PP
.nf
42 {
43     if(isRunning()) {
44         qDebug() << "new input " << input\&.toString();
45         m_input = input;
46         if(m_isVisible) {
47             emit resendInput(m_input);
48         }
49     }
50 }
.fi
.SS "SH_InOutState::setOutput (const QString &output)\fC [virtual]\fP, \fC [slot]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIoutput\fP 
.RE
.PP

.PP
Réimplémentée dans \fBSH_DatabaseContentQuestionState\fP\&.
.PP
Définition à la ligne 70 du fichier SH_IOState\&.cpp\&.
.PP
Références SH_GenericState::isRunning(), m_isVisible, m_output, output(), et sendOutput()\&.
.PP
Référencé par SH_InOutStateMachine::addIOState(), SH_DatabaseContentQuestionState::setOutput(), et SH_ServiceCharging::SH_ServiceCharging()\&.
.PP
.nf
71 {
72     if(isRunning()) {
73         m_output = output;
74         if(m_isVisible) {
75             emit sendOutput(QVariant(m_output));
76         }
77     }
78 }
.fi
.SS "SH_InOutState::setVisibility (boolisVisible)\fC [virtual]\fP, \fC [slot]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIisVisible\fP 
.RE
.PP

.PP
Définition à la ligne 85 du fichier SH_IOState\&.cpp\&.
.PP
Références SH_GenericState::isRunning(), et m_isVisible\&.
.PP
Référencé par SH_ServiceCharging::SH_ServiceCharging()\&.
.PP
.nf
86 {
87     if(isRunning()) {
88         m_isVisible = isVisible;
89     }
90 }
.fi
.SS "SH_GenericState::toString ()\fC [virtual]\fP, \fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
QString 
.RE
.PP

.PP
Réimplémentée à partir de \fBSH_NamedObject\fP\&.
.PP
Définition à la ligne 22 du fichier SH_GenericDebugableState\&.cpp\&.
.PP
Références SH_GenericStateMachine::toString(), et SH_NamedObject::toString()\&.
.PP
Référencé par SH_GenericStateMachine::addChildrenNextTransition(), SH_InOutStateMachine::addIOState(), SH_DateQuestionState::rawInput(), et SH_GenericStateMachine::toString()\&.
.PP
.nf
23 {
24     QStateMachine* machine = this->machine();
25     SH_InOutStateMachine* mach = qobject_cast<SH_InOutStateMachine *>(machine);
26     if(mach) {
27         return SH_NamedObject::toString()+ " [in "+mach->toString()+"] ";
28     } else {
29         return SH_NamedObject::toString();
30     }
31 }
.fi
.SS "SH_InOutState::visibility ()"

.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 97 du fichier SH_IOState\&.cpp\&.
.PP
Références m_isVisible\&.
.PP
Référencé par SH_InOutStateMachine::addIOState()\&.
.PP
.nf
97                                {
98     return m_isVisible;
99 }
.fi
.SH "Documentation des données membres"
.PP 
.SS "bool SH_InOutState::m_display\fC [private]\fP"

.PP
m_display 
.PP
Définition à la ligne 128 du fichier SH_IOState\&.h\&.
.PP
Référencé par display()\&.
.SS "QVariant SH_InOutState::m_input\fC [private]\fP"

.PP
m_input 
.PP
Définition à la ligne 116 du fichier SH_IOState\&.h\&.
.PP
Référencé par input(), onExit(), et setInput()\&.
.SS "bool SH_InOutState::m_isVisible\fC [private]\fP"

.PP
m_isVisible 
.PP
Définition à la ligne 124 du fichier SH_IOState\&.h\&.
.PP
Référencé par display(), onExit(), setInput(), setOutput(), setVisibility(), et visibility()\&.
.SS "QString SH_InOutState::m_output\fC [private]\fP"

.PP
m_output 
.PP
Définition à la ligne 120 du fichier SH_IOState\&.h\&.
.PP
Référencé par display(), output(), et setOutput()\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour PreCheck à partir du code source\&.
