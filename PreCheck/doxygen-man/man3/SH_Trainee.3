.TH "SH_Trainee" 3 "Mardi Juillet 2 2013" "Version 0.4" "PreCheck" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SH_Trainee \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SH_Trainee\&.h>\fP
.PP
Est dérivée de \fBSH_User\fP\&.
.SS "Connecteurs publics"

.in +1c
.ti -1c
.RI "static QVariant \fBexists\fP (QVariant login)"
.br
.in -1c
.SS "Signaux"

.in +1c
.ti -1c
.RI "void \fBnameChanged\fP ()"
.br
.ti -1c
.RI "void \fBrolesChanged\fP ()"
.br
.ti -1c
.RI "void \fBvalidityChanged\fP ()"
.br
.in -1c
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBSH_Trainee\fP (QString \fBname\fP, int \fBid\fP=0, \fBQObject\fP *parent=0)"
.br
.ti -1c
.RI "int \fBid\fP () const "
.br
.ti -1c
.RI "bool \fBisAdministrator\fP () const "
.br
.ti -1c
.RI "bool \fBisManagerX\fP () const "
.br
.ti -1c
.RI "bool \fBisManagerZ\fP () const "
.br
.ti -1c
.RI "bool \fBisReceptionist\fP () const "
.br
.ti -1c
.RI "bool \fBisValid\fP () const "
.br
.ti -1c
.RI "QString \fBname\fP () const "
.br
.ti -1c
.RI "int \fBroles\fP () const "
.br
.ti -1c
.RI "bool \fBsave\fP (QString password)"
.br
.ti -1c
.RI "bool \fBsetNewPassword\fP (QString newPass)"
.br
.in -1c
.SS "Fonctions membres publiques statiques"

.in +1c
.ti -1c
.RI "static \fBSH_User\fP * \fBlogIn\fP (QString login, QString pass)"
.br
.ti -1c
.RI "static bool \fBtraineeExists\fP (QString login)"
.br
.ti -1c
.RI "static bool \fBuserExists\fP (QString login)"
.br
.in -1c
.SS "Propriétés"

.in +1c
.ti -1c
.RI "bool \fBadministrator\fP"
.br
.ti -1c
.RI "int \fBid\fP"
.br
.ti -1c
.RI "bool \fBmanagerX\fP"
.br
.ti -1c
.RI "bool \fBmanagerZ\fP"
.br
.ti -1c
.RI "QString \fBname\fP"
.br
.ti -1c
.RI "bool \fBreceptionist\fP"
.br
.ti -1c
.RI "int \fBroles\fP"
.br
.ti -1c
.RI "bool \fBvalid\fP"
.br
.in -1c
.SH "Description détaillée"
.PP 
Définition à la ligne 15 du fichier SH_Trainee\&.h\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "SH_Trainee::SH_Trainee (QStringname, intid = \fC0\fP, \fBQObject\fP *parent = \fC0\fP)"

.PP
Définition à la ligne 12 du fichier SH_Trainee\&.cpp\&.
.PP
.nf
12                                                             :
13     SH_User(name, id, true, false, false, false, parent)
14 {
15 
16 }
.fi
.SH "Documentation des fonctions membres"
.PP 
.SS "SH_User::exists (QVariantlogin)\fC [inline]\fP, \fC [static]\fP, \fC [slot]\fP, \fC [inherited]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIlogin\fP 
.RE
.PP
\fBRenvoie:\fP
.RS 4
QVariant 
.RE
.PP

.PP
Définition à la ligne 147 du fichier SH_User\&.h\&.
.PP
Références SH_User::traineeExists(), et SH_User::userExists()\&.
.PP
Référencé par SH_ApplicationCore::setMode(), et SH_ApplicationCore::userExists()\&.
.PP
.nf
147 {return QVariant(SH_User::userExists(login\&.toString()) || SH_User::traineeExists(login\&.toString()));}
.fi
.SS "int SH_User::id () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
Définition à la ligne 57 du fichier SH_User\&.h\&.
.PP
Références SH_User::m_id\&.
.PP
Référencé par SH_User::setID()\&.
.PP
.nf
57 { return this->m_id; }
.fi
.SS "SH_User::isAdministrator () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 89 du fichier SH_User\&.h\&.
.PP
Références SH_User::m_administrator\&.
.PP
Référencé par SH_User::save(), SH_ApplicationCore::setMode(), et SH_User::SH_User()\&.
.PP
.nf
89 { return this->m_administrator; }
.fi
.SS "SH_User::isManagerX () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 73 du fichier SH_User\&.h\&.
.PP
Références SH_User::m_managerX\&.
.PP
Référencé par SH_User::save(), SH_ApplicationCore::setMode(), et SH_User::SH_User()\&.
.PP
.nf
73 { return this->m_managerX; }
.fi
.SS "SH_User::isManagerZ () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 81 du fichier SH_User\&.h\&.
.PP
Références SH_User::m_managerZ\&.
.PP
Référencé par SH_User::save(), SH_ApplicationCore::setMode(), et SH_User::SH_User()\&.
.PP
.nf
81 { return this->m_managerZ; }
.fi
.SS "SH_User::isReceptionist () const\fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 67 du fichier SH_User\&.cpp\&.
.PP
Références SH_User::m_receptionist\&.
.PP
Référencé par SH_User::save(), SH_ApplicationCore::setMode(), et SH_User::SH_User()\&.
.PP
.nf
68 {
69     return this->m_receptionist;
70 }
.fi
.SS "SH_User::isValid () const\fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 35 du fichier SH_User\&.cpp\&.
.PP
Références SH_User::m_id, et SH_User::m_name\&.
.PP
Référencé par SH_User::logIn(), SH_ApplicationCore::setUser(), et SH_ApplicationCore::userLogOut()\&.
.PP
.nf
35                             {
36     return ((!this->m_name\&.isEmpty()) && (this->m_id != 0));
37 }
.fi
.SS "SH_User::logIn (QStringlogin, QStringpass)\fC [static]\fP, \fC [inherited]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIlogin\fP 
.br
\fIpass\fP 
.RE
.PP
\fBRenvoie:\fP
.RS 4
User 
.RE
.PP

.PP
Définition à la ligne 157 du fichier SH_User\&.cpp\&.
.PP
Références SH_DatabaseManager::execSelectQuery(), SH_DatabaseManager::getInstance(), SH_User::isValid(), SH_User::SH_User(), SH_User::traineeExists(), et SH_User::userExists()\&.
.PP
Référencé par SH_ApplicationCore::setUser()\&.
.PP
.nf
158 {
159     //SH_MessageManager::debugMessage("log in");
160     bool isValid = false;
161     QCryptographicHash encPass(QCryptographicHash::Sha512);
162     encPass\&.addData(pass\&.toUtf8());
163     bool trainee=false;
164     QStringList fields;
165     QString table;
166     if(userExists(login)) {
167         fields << "ID" << "LOGIN" << "ISRECEPTIONIST" << "ISMANAGERX" << "ISMANAGERZ" << "ISADMINISTRATOR";
168         table ="USERS";
169     } else if(traineeExists(login)) {
170         fields << "ID" << "LOGIN";
171         table ="TRAINEES";
172         trainee=true;
173     }
174     QSqlQuery result = SH_DatabaseManager::getInstance()->execSelectQuery(table,fields,"LOGIN='"+login+"' AND ENCRYPTEDPASS='"+QString::fromLatin1(encPass\&.result()\&.toHex())\&.toUpper()+"'");
175     if(result\&.next()) {
176         QSqlRecord rec = result\&.record();
177         if(rec\&.isEmpty() || !result\&.isValid()) {
178             isValid = false;
179         } else {
180             isValid = (rec\&.value(rec\&.indexOf("LOGIN"))\&.toString() == login);
181         }
182 
183         if(isValid) {
184             if(trainee) {
185                 return new SH_Trainee(rec\&.value(rec\&.indexOf("LOGIN"))\&.toString(),rec\&.value(rec\&.indexOf("ID"))\&.toInt());
186             } else {
187                 return new SH_User(rec\&.value(rec\&.indexOf("LOGIN"))\&.toString(),rec\&.value(rec\&.indexOf("ID"))\&.toInt(),(rec\&.value(rec\&.indexOf("ISRECEPTIONIST"))\&.toString()=="1"),(rec\&.value(rec\&.indexOf("ISMANAGERX"))\&.toString()=="1"),(rec\&.value(rec\&.indexOf("ISMANAGERZ"))\&.toString()=="1"),(rec\&.value(rec\&.indexOf("ISADMINISTRATOR"))\&.toString()=="1"));
188             }
189         }
190     }
191     return new SH_User();
192 }
.fi
.SS "QString SH_User::name () const\fC [inherited]\fP"

.PP
Référencé par save(), SH_User::save(), et SH_User::setName()\&.
.SS "SH_User::nameChanged ()\fC [signal]\fP, \fC [inherited]\fP"

.SS "int SH_User::roles () const\fC [inherited]\fP"

.SS "SH_User::rolesChanged ()\fC [signal]\fP, \fC [inherited]\fP"

.SS "bool SH_Trainee::save (QStringpassword)\fC [virtual]\fP"

.PP
Réimplémentée à partir de \fBSH_User\fP\&.
.PP
Définition à la ligne 19 du fichier SH_Trainee\&.cpp\&.
.PP
Références SH_DatabaseManager::execReplaceQuery(), SH_DatabaseManager::getInstance(), et SH_User::name()\&.
.PP
Référencé par SH_ApplicationCore::saveUser()\&.
.PP
.nf
19                                       {
20     QVariantMap map;
21     if(id() > 0) {
22         map\&.insert("ID",QVariant(this->id()));
23     }
24     map\&.insert("LOGIN",QVariant(this->name()));
25     QCryptographicHash encPass(QCryptographicHash::Sha512);
26     encPass\&.addData(password\&.toUtf8());
27     map\&.insert("ENCRYPTEDPASS",QVariant(QString::fromLatin1(encPass\&.result()\&.toHex())\&.toUpper()));
28 
29     return SH_DatabaseManager::getInstance()->execReplaceQuery("TRAINEES",map);
30 }
.fi
.SS "bool SH_User::setNewPassword (QStringnewPass)\fC [inherited]\fP"

.PP
Définition à la ligne 147 du fichier SH_User\&.cpp\&.
.PP
Références SH_User::save()\&.
.PP
.nf
147                                             {
148     return this->save(newPass);
149 }
.fi
.SS "SH_User::traineeExists (QStringlogin)\fC [static]\fP, \fC [inherited]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIlogin\fP 
.RE
.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 124 du fichier SH_User\&.cpp\&.
.PP
Références SH_DatabaseManager::getInstance()\&.
.PP
Référencé par SH_User::exists(), et SH_User::logIn()\&.
.PP
.nf
124                                          {
125     //SH_MessageManager::debugMessage("trainee exists");
126     return (SH_DatabaseManager::getInstance()->dataCount("TRAINEES", "LOGIN='"+login+"'") == 1);
127 }
.fi
.SS "SH_User::userExists (QStringlogin)\fC [static]\fP, \fC [inherited]\fP"

.PP
\fBParamètres:\fP
.RS 4
\fIlogin\fP 
.RE
.PP
\fBRenvoie:\fP
.RS 4
bool 
.RE
.PP

.PP
Définition à la ligne 113 du fichier SH_User\&.cpp\&.
.PP
Références SH_DatabaseManager::getInstance()\&.
.PP
Référencé par SH_User::exists(), et SH_User::logIn()\&.
.PP
.nf
113                                       {
114     //SH_MessageManager::debugMessage("user exists");
115     return (SH_DatabaseManager::getInstance()->dataCount("USERS", "LOGIN='"+login+"'") == 1);
116 }
.fi
.SS "SH_User::validityChanged ()\fC [signal]\fP, \fC [inherited]\fP"

.SH "Documentation des propriétés"
.PP 
.SS "bool SH_User::administrator\fC [read]\fP, \fC [inherited]\fP"

.PP
Définition à la ligne 23 du fichier SH_User\&.h\&.
.SS "SH_User::id\fC [read]\fP, \fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
int 
.RE
.PP

.PP
Définition à la ligne 18 du fichier SH_User\&.h\&.
.PP
Référencé par SH_ApplicationCore::launchServiceCharging()\&.
.SS "bool SH_User::managerX\fC [read]\fP, \fC [inherited]\fP"

.PP
Définition à la ligne 21 du fichier SH_User\&.h\&.
.SS "bool SH_User::managerZ\fC [read]\fP, \fC [inherited]\fP"

.PP
Définition à la ligne 22 du fichier SH_User\&.h\&.
.SS "SH_User::name\fC [read]\fP, \fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
QString 
.RE
.PP

.PP
Définition à la ligne 19 du fichier SH_User\&.h\&.
.PP
Référencé par SH_ApplicationCore::setMode(), et SH_ApplicationCore::setUser()\&.
.SS "bool SH_User::receptionist\fC [read]\fP, \fC [inherited]\fP"

.PP
Définition à la ligne 20 du fichier SH_User\&.h\&.
.SS "SH_User::roles\fC [read]\fP, \fC [inherited]\fP"

.PP
\fBRenvoie:\fP
.RS 4
int 
.RE
.PP

.PP
Définition à la ligne 24 du fichier SH_User\&.h\&.
.SS "bool SH_User::valid\fC [read]\fP, \fC [inherited]\fP"

.PP
Définition à la ligne 25 du fichier SH_User\&.h\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour PreCheck à partir du code source\&.
