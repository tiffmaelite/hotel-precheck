<!-- HTML header for doxygen 1.8.4-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.4"/>
<title>PreCheck: Qt Signal Tools</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen-extra-stylesheets.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">PreCheck
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Logiciel open-source de main-courante pour une réception                                                 d&#39;hôtel à écran tactile, permettant l&#39;impression de                                                 factures pré-check et la gestion d&#39;une archive client</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.8.4 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Recherche');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Page&#160;principale</span></a></li>
      <li class="current"><a href="pages.xhtml"><span>Pages&#160;associées</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Fichiers</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Recherche" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('md__home_tiff_Stage-IUT_app_simplhotel_hotel-precheck_libs_qt-signal-tools_README.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Tout</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Fichiers</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Fonctions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Énumérations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Valeurs énumérées</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Propriétés</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Qt Signal Tools </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>qt-signal-tools is a collection of utility classes related to signal and slots in Qt. It includes:</p>
<ul>
<li>QtCallback - Package up a receiver and slot arguments into an object for invoking later.</li>
<li>QtSignalForwarder - Connect signals and events from objects to QtCallback or arbitrary functions.</li>
<li>QtMetacallAdapter - Low-level interface for calling a function using a list of QGenericArgument() arguments.</li>
<li>safe_bind() - Create a wrapper around a method call which does nothing and returns a default value if the object is destroyed before the wrapper is called.</li>
</ul>
<h2>Requirements</h2>
<ul>
<li>Qt 4.8 (could be adapted for earlier Qt versions if necessary)</li>
<li>The TR1 standard library (for C++03 compilers) or the C++11 standard library (for newer compilers when C++11 support is enabled).</li>
</ul>
<h2>Classes</h2>
<h3>QtCallback</h3>
<p>QtCallback is a binder class which provides a way to create callbacks that invoke a signal or slot when invoked, using a mixture of pre-bound arguments and arguments passed to QtCallback::invoke().</p>
<p>Usage: ```cpp QtCallback1&lt;int&gt; callback(myWidget, SLOT(someSlot(int,QString))); callback.bind(42);</p>
<p>// invokes the MyWidget::someSlot() slot with arguments (42, "Hello World") callback.invoke("Hello World");</p>
<p>void MyWidget::someSlot(int firstArg, const QString&amp; secondArg) { } ```</p>
<h3>QtSignalForwarder</h3>
<p>QtSignalForwarder provides a way to invoke callbacks when an object emits a signal or receives a particular type of event. The callbacks can be signals and slots (via <code>QtCallback</code>) or arbitrary functions using <code>tr1::function</code>, <code>std::function</code>, <code>boost::function</code> or a similar wrapper.</p>
<p>Qt 5 provides support for connecting signals to arbitrary functions out of the box and to lambdas when using C++11. QtSignalForwarder emulates this for Qt 4.</p>
<p>As well as being able to connect signals to functions that are not slots, this also provides a way to pass additional arguments to the receiver other than those from the signal using <code>QtCallback::bind()</code> or <code>std::tr1::bind()</code>.</p>
<p>Usage:</p>
<p>Connecting a signal to a slot with pre-bound arguments: ```cpp MyObject receiver; QPushButton button; QtSignalForwarder::connect(&amp;button, SIGNAL(clicked(bool)), QtCallback(&amp;receiver, SLOT(buttonClicked(int))).bind(42));</p>
<p>// invokes MyObject::buttonClicked() slot with arguments (42) button.click(); ```</p>
<p>Connecting a signal to an arbitrary function: ```cpp using namespace std::tr1; using namespace std::tr1::placeholders;</p>
<p>SomeObject receiver; QLineEdit editor;</p>
<p>// function which calls someMethod() with the first-argument fixed (42) and the // second string argument from the signal function&lt;void(int,QString)&gt; callback(bind(&amp;SomeObject::someMethod, &amp;receiver, 42, _1));</p>
<p>QtSignalForwarder::connect(&amp;editor, SIGNAL(textChanged(QString)), callback);</p>
<p>// invokes SomeObject::someMethod(42, "Hello World") editor.setText("Hello World"); ```</p>
<h3>safe_bind()</h3>
<p>Compared to using Qt 4's normal signals and slots, a disadvantage of using <code>bind()</code> or <code>function</code> to create a callback object which can be run later is that there is no automatically disconnection if the object is destroyed.</p>
<p>As a solution, the <code>safe_bind()</code> function creates a wrapper around an object and a method call. The wrapper can then be called with the same arguments as the wrapped method. When a call happens, either the wrapped method is called with the provided arguments, or if the object has been destroyed, nothing happens and a default value is returned.</p>
<p>The wrapper created by <code>safe_bind()</code> can be used with <code>bind()</code> and <code>function</code> and can be used together with <code>QtSignalForwarder</code> to automatically 'disconnect' if the receiver is destroyed.</p>
<p>```cpp QScopedPointer&lt;QLabel&gt; label(new QLabel);</p>
<p>// create a wrapper around label-&gt;setText() which can be run using // setTextWrapper(text). function&lt;void(QString)&gt; setTextWrapper = safe_bind(label.data(), &amp;QLabel::setText);</p>
<p>// create a wrapper around label-&gt;text() which either calls label-&gt;text() and returns // the same result or returns an empty string if the label has been destroyed function&lt;QString()&gt; getTextWrapper = safe_bind(label.data(), &amp;QLabel::text);</p>
<p>setTextWrapper("first update"); // sets the label's text to "first update" qDebug() &lt;&lt; "label text" &lt;&lt; getTextWrapper(); // prints "first update" label.reset(); // destroy the label setTextWrapper("second update"); // does nothing, as the label has been destroyed qDebug() &lt;&lt; "label text" &lt;&lt; getTextWrapper(); // prints an empty string ```</p>
<h3>QtMetacallAdapter</h3>
<p>QtMetacallAdapter is a low-level wrapper around a function or function object (eg. <code>std::function</code>) which can be used to invoke the function with a list of QGenericArgument (created by the Q_ARG() macro) and introspect the function's argument types at runtime.</p>
<h2>License</h2>
<p>qt-signal-tools is licensed under the BSD license.</p>
<h2>Related Projects &amp; Reading</h2>
<ul>
<li>Qt Signal Adapters - Library for connecting signals to Boost function objects: <a href="http://sourceforge.net/projects/qtsignaladapter/">http://sourceforge.net/projects/qtsignaladapter/</a></li>
<li>sigfwd - Library for connecting signals to function objects. Uses Boost. <a href="https://bitbucket.org/edd/sigfwd/wiki/Home">https://bitbucket.org/edd/sigfwd/wiki/Home</a></li>
<li>Qt 5 meta-object system changes - <a href="http://blog.qt.digia.com/blog/2012/06/22/changes-to-the-meta-object-system-in-qt-5/">http://blog.qt.digia.com/blog/2012/06/22/changes-to-the-meta-object-system-in-qt-5/</a> </li>
</ul>
</div></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.4-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Généré le Mardi Juillet 2 2013 13:26:24 pour PreCheck par
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.4 </li>
  </ul>
</div>
</body>
</html>
