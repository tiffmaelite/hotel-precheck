.TH "QsLogging" 3 "Jeudi Juin 20 2013" "Version 0.3" "PreCheck" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QsLogging \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBDebugOutputDestination\fP"
.br
.RI "\fIThe \fBDebugOutputDestination\fP class\&. \fP"
.ti -1c
.RI "class \fBDestination\fP"
.br
.RI "\fIThe \fBDestination\fP class\&. \fP"
.ti -1c
.RI "class \fBDestinationFactory\fP"
.br
.ti -1c
.RI "class \fBFileDestination\fP"
.br
.RI "\fIThe \fBFileDestination\fP class\&. \fP"
.ti -1c
.RI "class \fBLogger\fP"
.br
.ti -1c
.RI "class \fBLoggerImpl\fP"
.br
.ti -1c
.RI "class \fBNullRotationStrategy\fP"
.br
.RI "\fIThe \fBNullRotationStrategy\fP class\&. \fP"
.ti -1c
.RI "class \fBRotationStrategy\fP"
.br
.RI "\fIThe \fBRotationStrategy\fP class\&. \fP"
.ti -1c
.RI "class \fBSizeRotationStrategy\fP"
.br
.RI "\fIThe \fBSizeRotationStrategy\fP class\&. \fP"
.in -1c
.SS "Définitions de type"

.in +1c
.ti -1c
.RI "typedef QVector< \fBDestinationPtr\fP > \fBDestinationList\fP"
.br
.ti -1c
.RI "typedef QSharedPointer
.br
< \fBDestination\fP > \fBDestinationPtr\fP"
.br
.RI "\fIDestinationPtr\&. \fP"
.ti -1c
.RI "typedef QSharedPointer
.br
< \fBRotationStrategy\fP > \fBRotationStrategyPtr\fP"
.br
.RI "\fIRotationStrategyPtr\&. \fP"
.in -1c
.SS "Énumérations"

.in +1c
.ti -1c
.RI "enum \fBLevel\fP { \fBTraceLevel\fP = 0, \fBDebugLevel\fP, \fBInfoLevel\fP, \fBWarnLevel\fP, \fBErrorLevel\fP, \fBFatalLevel\fP, \fBOffLevel\fP }"
.br
.RI "\fIThe Level enum\&. \fP"
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "static const QString \fBfmtDateTime\fP ('yyyy-MM-ddThh:mm:ss\&.zzz')"
.br
.ti -1c
.RI "static const char * \fBLevelToText\fP (\fBLevel\fP theLevel)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static const char \fBDebugString\fP [] = 'DEBUG'"
.br
.ti -1c
.RI "static const char \fBErrorString\fP [] = 'ERROR'"
.br
.ti -1c
.RI "static const char \fBFatalString\fP [] = 'FATAL'"
.br
.ti -1c
.RI "static const char \fBInfoString\fP [] = 'INFO'"
.br
.ti -1c
.RI "static const char \fBTraceString\fP [] = 'TRACE'"
.br
.ti -1c
.RI "static const char \fBWarnString\fP [] = 'WARN'"
.br
.in -1c
.SH "Documentation des définitions de type"
.PP 
.SS "\fBQsLogging::DestinationList\fP"

.PP
Définition à la ligne 67 du fichier QsLog\&.cpp\&.
.SS "typedef QSharedPointer<\fBDestination\fP> \fBQsLogging::DestinationPtr\fP"

.PP
DestinationPtr\&. 
.PP
Définition à la ligne 83 du fichier QsLogDest\&.h\&.
.SS "typedef QSharedPointer<\fBRotationStrategy\fP> \fBQsLogging::RotationStrategyPtr\fP"

.PP
RotationStrategyPtr\&. 
.PP
Définition à la ligne 175 du fichier QsLogDestFile\&.h\&.
.SH "Documentation du type de l'énumération"
.PP 
.SS "enum \fBQsLogging::Level\fP"

.PP
The Level enum\&. 
.PP
\fBValeurs énumérées\fP
.in +1c
.TP
\fB\fITraceLevel \fP\fP
.TP
\fB\fIDebugLevel \fP\fP
.TP
\fB\fIInfoLevel \fP\fP
.TP
\fB\fIWarnLevel \fP\fP
.TP
\fB\fIErrorLevel \fP\fP
.TP
\fB\fIFatalLevel \fP\fP
.TP
\fB\fIOffLevel \fP\fP
.PP
Définition à la ligne 56 du fichier QsLogLevel\&.h\&.
.PP
.nf
57 {
58     TraceLevel = 0,
59     DebugLevel,
60     InfoLevel,
61     WarnLevel,
62     ErrorLevel,
63     FatalLevel,
64     OffLevel
65 };
.fi
.SH "Documentation des fonctions"
.PP 
.SS "static const QString QsLogging::fmtDateTime ('yyyy-MM-ddThh:mm:ss\&.zzz')\fC [static]\fP"

.PP
Référencé par QsLogging::Logger::Helper::writeToLog()\&.
.SS "static const char* QsLogging::LevelToText (LeveltheLevel)\fC [static]\fP"

.PP
Définition à la ligne 103 du fichier QsLog\&.cpp\&.
.PP
Références DebugLevel, DebugString, ErrorLevel, ErrorString, FatalLevel, FatalString, InfoLevel, InfoString, OffLevel, TraceLevel, TraceString, WarnLevel, et WarnString\&.
.PP
Référencé par QsLogging::Logger::Helper::writeToLog()\&.
.PP
.nf
104 {
105     switch (theLevel) {
106     case TraceLevel:
107         return TraceString;
108     case DebugLevel:
109         return DebugString;
110     case InfoLevel:
111         return InfoString;
112     case WarnLevel:
113         return WarnString;
114     case ErrorLevel:
115         return ErrorString;
116     case FatalLevel:
117         return FatalString;
118     case OffLevel:
119         return "";
120     default: {
121         assert(!"bad log level");
122         return InfoString;
123     }
124     }
125 }
.fi
.SH "Documentation des variables"
.PP 
.SS "QsLogging::DebugString = 'DEBUG'\fC [static]\fP"

.PP
Définition à la ligne 75 du fichier QsLog\&.cpp\&.
.PP
Référencé par LevelToText()\&.
.SS "QsLogging::ErrorString = 'ERROR'\fC [static]\fP"

.PP
Définition à la ligne 87 du fichier QsLog\&.cpp\&.
.PP
Référencé par LevelToText()\&.
.SS "QsLogging::FatalString = 'FATAL'\fC [static]\fP"

.PP
Définition à la ligne 91 du fichier QsLog\&.cpp\&.
.PP
Référencé par LevelToText()\&.
.SS "QsLogging::InfoString = 'INFO'\fC [static]\fP"

.PP
Définition à la ligne 79 du fichier QsLog\&.cpp\&.
.PP
Référencé par LevelToText()\&.
.SS "QsLogging::TraceString = 'TRACE'\fC [static]\fP"

.PP
Définition à la ligne 71 du fichier QsLog\&.cpp\&.
.PP
Référencé par LevelToText()\&.
.SS "QsLogging::WarnString = 'WARN'\fC [static]\fP"

.PP
Définition à la ligne 83 du fichier QsLog\&.cpp\&.
.PP
Référencé par LevelToText()\&.
.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour PreCheck à partir du code source\&.
