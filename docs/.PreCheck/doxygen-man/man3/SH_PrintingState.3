.TH "SH_PrintingState" 3 "Jeudi Juin 20 2013" "Version 0.3" "PreCheck" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SH_PrintingState \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SH_PrintingState\&.h>\fP
.PP
Est dérivée de \fBSH_GenericState\fP\&.
.SS "Signaux"

.in +1c
.ti -1c
.RI "void \fBnext\fP ()"
.br
.ti -1c
.RI "void \fBprintFinished\fP ()"
.br
.ti -1c
.RI "void \fBprintStarted\fP ()"
.br
.in -1c
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBSH_PrintingState\fP (QString \fBname\fP, \fBQState\fP *parent=0)"
.br
.ti -1c
.RI "QString \fBtoString\fP ()"
.br
.in -1c
.SS "Fonctions membres protégées"

.in +1c
.ti -1c
.RI "void \fBonEntry\fP (QEvent *event)"
.br
.ti -1c
.RI "void \fBonExit\fP (QEvent *event)"
.br
.in -1c
.SH "Description détaillée"
.PP 
Définition à la ligne 10 du fichier SH_PrintingState\&.h\&.
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "SH_PrintingState::SH_PrintingState (QStringname, \fBQState\fP *parent = \fC0\fP)"

.PP
\fBParamètres:\fP
.RS 4
\fIname\fP 
.br
\fIparent\fP 
.RE
.PP

.PP
Définition à la ligne 9 du fichier SH_PrintingState\&.cpp\&.
.PP
.nf
9                                                                :
10     SH_GenericState(name, parent)
11 {
12 }
.fi
.SH "Documentation des fonctions membres"
.PP 
.SS "void SH_GenericState::next ()\fC [signal]\fP, \fC [inherited]\fP"

.PP
Référencé par SH_QuestionState::checkValidity(), SH_ConfirmationState::confirmInput(), SH_AdaptDatabaseState::insertUpdate(), SH_StatementState::onEntry(), SH_BillingCreationStateMachine::SH_BillingCreationStateMachine(), et SH_ServiceCharging::SH_ServiceCharging()\&.
.SS "void SH_GenericState::onEntry (QEvent *event)\fC [protected]\fP, \fC [inherited]\fP"

.PP
Définition à la ligne 62 du fichier SH_GenericDebugableState\&.cpp\&.
.PP
Références SH_NamedObject::name()\&.
.PP
Référencé par SH_StatementState::onEntry()\&.
.PP
.nf
63 {
64     Q_UNUSED(event);
65     qDebug() << "Machine: " << machine()->objectName() << " entered " << name();
66 }
.fi
.SS "void SH_GenericState::onExit (QEvent *event)\fC [protected]\fP, \fC [inherited]\fP"

.PP
Définition à la ligne 73 du fichier SH_GenericDebugableState\&.cpp\&.
.PP
Références SH_NamedObject::name()\&.
.PP
Référencé par SH_InOutState::onExit()\&.
.PP
.nf
74 {
75     Q_UNUSED(event);
76     qDebug() << "Machine: " << machine()->objectName() << " exited  " << name();
77 }
.fi
.SS "void SH_PrintingState::printFinished ()\fC [signal]\fP"

.SS "void SH_PrintingState::printStarted ()\fC [signal]\fP"

.SS "QString SH_GenericState::toString ()\fC [virtual]\fP, \fC [inherited]\fP"

.PP
Réimplémentée à partir de \fBSH_NamedObject\fP\&.
.PP
Définition à la ligne 21 du fichier SH_GenericDebugableState\&.cpp\&.
.PP
Références SH_NamedObject::toString(), et SH_InOutStateMachine::toString()\&.
.PP
Référencé par SH_InOutStateMachine::addChildrenNextTransition(), SH_DateQuestionState::rawInput(), et SH_InOutStateMachine::toString()\&.
.PP
.nf
22 {
23     QStateMachine* machine = this->machine();
24     SH_InOutStateMachine* mach = qobject_cast<SH_InOutStateMachine *>(machine);
25     if(mach) {
26         return SH_NamedObject::toString()+ " [in "+mach->toString()+"] ";
27     } else {
28         return SH_NamedObject::toString();
29     }
30 }
.fi


.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour PreCheck à partir du code source\&.
