// Copyright (c) 2013, Razvan Petru
// All rights reserved.

// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:

// * Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright notice, this
//   list of conditions and the following disclaimer in the documentation and/or other
//   materials provided with the distribution.
// * The name of the contributors may not be used to endorse or promote products
//   derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
// OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
// OF THE POSSIBILITY OF SUCH DAMAGE.

#ifndef QSLOGDEST_H
#define QSLOGDEST_H

#include "QsLogLevel.h"
#include <QSharedPointer>
#include <QtGlobal>
class QString;

namespace QsLogging
{

/*!
 \brief 
 \class  Destination TODO comment this QsLogDest.h "logging/QsLogDest.h"
*/
class Destination
{
public:
    /*!
     \brief 
     \fn ~Destination TODO comment this
    */
    virtual ~Destination(){}
    /*!
     \brief 
     \fn write TODO comment this
     \param message TODO comment this
     \param level TODO comment this
    */
    virtual void write(const QString& message, Level level) = 0;
    /*!
     \brief 
     \fn isValid TODO comment this
     \return bool TODO comment this
    */
    virtual bool isValid() = 0; // returns whether the destination was created correctly
};
/*!
 \brief 
 \typedef DestinationPtr TODO comment this
*/
typedef QSharedPointer<Destination> DestinationPtr;

//! Creates logging destinations/sinks. The caller will have ownership of 
//! the newly created destinations.
/*!
 \brief 
 \class  DestinationFactory TODO comment this QsLogDest.h "logging/QsLogDest.h"
*/
class DestinationFactory
{
public:
    /*!
     \brief 
     \fn MakeFileDestination TODO comment this
     \param filePath TODO comment this
     \param enableRotation TODO comment this
     \param sizeInBytesToRotateAfter TODO comment this
     \param oldLogsToKeep TODO comment this
     \return DestinationPtr TODO comment this
    */
    static DestinationPtr MakeFileDestination(const QString& filePath, bool enableRotation = false, qint64 sizeInBytesToRotateAfter = 0, int oldLogsToKeep = 0);
    /*!
     \brief 
     \fn MakeDebugOutputDestination TODO comment this
     \return DestinationPtr TODO comment this
    */
    static DestinationPtr MakeDebugOutputDestination();
};

} // end namespace

#endif // QSLOGDEST_H
