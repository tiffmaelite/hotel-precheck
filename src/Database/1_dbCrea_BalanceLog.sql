CONNECT 'localhost:/home/tiff/Stage-IUT/app/hotel-precheck/src/PreCheck/Database/PreCheckDB.fdb' USER 'SYSDBA' PASSWORD 'masterkey';

COMMIT;


CREATE TABLE BALANCELOG
(
YEARLOG AS INT,
MONTHLOG AS INT,
DAYLOG AS INT,
HOURLOG AS INT,
BALANCE AS FLOAT,
CONSTRAINT PK_BALANCELOG_DATE PRIMARY KEY (YEARLOG, MONTHLOG, DAYLOG, HOURLOG)
);


CREATE TABLE YEARLYBALANCECOUNTER
(
CREATIONTIME AS TIMESTAMP,
YEARLOG AS INT,
BALANCE AS FLOAT,
CONSTRAINT PK_YEARLYBALANCECOUNTER_CREATION PRIMARY KEY CREATIONTIME
);

CREATE TABLE MONTHLYBALANCECOUNTER
(
CREATIONTIME AS TIMESTAMP,
YEARLOG AS INT,
MONTHLOG AS INT,
BALANCE AS FLOAT,
CONSTRAINT PK_MONTHLYBALANCECOUNTER_CREATION PRIMARY KEY CREATIONTIME
);

SET TERM !! ;
CREATE TRIGGER TR_MONTHLOG FOR MONTHLYBALANCECOUNTER
ACTIVE BEFORE UPDATE position 0
AS
BEGIN
IF ((new.BALANCE IS NOT NULL) AND (new.BALANCE > 0)) THEN
BEGIN
EXECUTE INCREMENTYEARLYCOUNTERBY(new.BALANCE-old.BALANCE);
END
END!!
SET TERM ; !!

CREATE TABLE DAYLYBALANCECOUNTER
(
CREATIONTIME AS TIMESTAMP,
YEARLOG AS INT,
MONTHLOG AS INT,
DAYLOG AS INT,
BALANCE AS FLOAT,
CONSTRAINT PK_DAYLYBALANCECOUNTER_CREATION PRIMARY KEY CREATIONTIME
);

SET TERM !! ;

CREATE TRIGGER TR_DAYLOG FOR DAYLYBALANCECOUNTER
ACTIVE BEFORE UPDATE position 0
AS
BEGIN
IF ((new.BALANCE IS NOT NULL) AND (new.BALANCE > 0)) THEN
BEGIN
EXECUTE INCREMENTMONTHLYCOUNTERBY(new.BALANCE-old.BALANCE);
END
END!!
SET TERM ; !!

CREATE TABLE HOURLYBALANCECOUNTER
(
CREATIONTIME AS TIMESTAMP,
YEARLOG AS INT,
MONTHLOG AS INT,
DAYLOG AS INT,
HOURLOG AS INT,
BALANCE AS FLOAT,
CONSTRAINT PK_HOURLYBALANCECOUNTER_CREATION PRIMARY KEY CREATIONTIME
);

SET TERM !! ;
CREATE TRIGGER TR_HOURLOG FOR HOURLYBALANCECOUNTER
ACTIVE BEFORE UPDATE position 0
AS
BEGIN
IF ((new.BALANCE IS NOT NULL) AND (new.BALANCE > 0)) THEN
BEGIN
EXECUTE INCREMENTDAYLYCOUNTERBY(new.BALANCE-old.BALANCE);
END
END!!
SET TERM ; !!

COMMIT;
